security:
    enable_authenticator_manager: true

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"

    providers:
        admin:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            stateless: false
            provider: admin
            form_login:
                login_path: user_login
                check_path: user_login
                default_target_path: app_app
                username_parameter: email
                enable_csrf: true
            entry_point: form_login
            logout:
                path: user_logout
                target: user_login
            custom_authenticators:
                - App\Security\FormLoginAuthenticator
            remember_me:
                secret: "%kernel.secret%"
                lifetime: 604800
                path: /
                always_remember_me: true

    role_hierarchy:
        ROLE_DISTRICT_STAFF: [ROLE_ACCESS, ROLE_API]
        ROLE_ADMIN: [ROLE_ACCESS, ROLE_API, ROLE_DISTRICT_STAFF]

    access_control:
        - { path: ^/user/login, roles: PUBLIC_ACCESS }
        - { path: ^/translations, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: [ROLE_API] }
        - { path: ^/, roles: ROLE_ADMIN }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
